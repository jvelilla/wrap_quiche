note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class EWG_QUICHE_CALLBACK_C_GLUE_CODE_FUNCTIONS_API


feature -- Access

	set_cb_logging_object (a_class: POINTER) 
		do
			c_set_cb_logging_object (a_class)
		ensure
			instance_free: class
		end

	release_cb_logging_object
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				release_cb_logging_object ();
			]"
		end

	get_cb_logging_stub_1: POINTER
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				return get_cb_logging_stub_1 ();
			]"
		end

	get_cb_logging_stub_2: POINTER
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				return get_cb_logging_stub_2 ();
			]"
		end

	get_cb_logging_stub_3: POINTER
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				return get_cb_logging_stub_3 ();
			]"
		end

	set_cb_logging_entry_1 (a_feature: POINTER) 
		do
			c_set_cb_logging_entry_1 (a_feature)
		ensure
			instance_free: class
		end

	set_cb_logging_entry_2 (a_feature: POINTER) 
		do
			c_set_cb_logging_entry_2 (a_feature)
		ensure
			instance_free: class
		end

	set_cb_logging_entry_3 (a_feature: POINTER) 
		do
			c_set_cb_logging_entry_3 (a_feature)
		ensure
			instance_free: class
		end

	call_cb_logging (a_function: POINTER; line: STRING_8; argp: POINTER) 
		local
			line_c_string: C_STRING
		do
			create line_c_string.make (line)
			c_call_cb_logging (a_function, line_c_string.item, argp)
		ensure
			instance_free: class
		end

	set_cb_event_header_object (a_class: POINTER) 
		do
			c_set_cb_event_header_object (a_class)
		ensure
			instance_free: class
		end

	release_cb_event_header_object
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				release_cb_event_header_object ();
			]"
		end

	get_cb_event_header_stub_1: POINTER
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				return get_cb_event_header_stub_1 ();
			]"
		end

	get_cb_event_header_stub_2: POINTER
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				return get_cb_event_header_stub_2 ();
			]"
		end

	get_cb_event_header_stub_3: POINTER
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				return get_cb_event_header_stub_3 ();
			]"
		end

	set_cb_event_header_entry_1 (a_feature: POINTER) 
		do
			c_set_cb_event_header_entry_1 (a_feature)
		ensure
			instance_free: class
		end

	set_cb_event_header_entry_2 (a_feature: POINTER) 
		do
			c_set_cb_event_header_entry_2 (a_feature)
		ensure
			instance_free: class
		end

	set_cb_event_header_entry_3 (a_feature: POINTER) 
		do
			c_set_cb_event_header_entry_3 (a_feature)
		ensure
			instance_free: class
		end

	call_cb_event_header (a_function: POINTER; name: STRING_8; name_len: INTEGER; value: STRING_8; value_len: INTEGER; argp: POINTER): INTEGER 
		local
			name_c_string: C_STRING
			value_c_string: C_STRING
		do
			create name_c_string.make (name)
			create value_c_string.make (value)
			Result := c_call_cb_event_header (a_function, name_c_string.item, name_len, value_c_string.item, value_len, argp)
		ensure
			instance_free: class
		end

feature -- Externals

	c_set_cb_logging_object (a_class: POINTER)
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				set_cb_logging_object ((void*)$a_class);
			]"
		end

	c_set_cb_logging_entry_1 (a_feature: POINTER)
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				set_cb_logging_entry_1 ((void*)$a_feature);
			]"
		end

	c_set_cb_logging_entry_2 (a_feature: POINTER)
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				set_cb_logging_entry_2 ((void*)$a_feature);
			]"
		end

	c_set_cb_logging_entry_3 (a_feature: POINTER)
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				set_cb_logging_entry_3 ((void*)$a_feature);
			]"
		end

	c_call_cb_logging (a_function: POINTER; line: POINTER; argp: POINTER)
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				call_cb_logging ((void*)$a_function, (char const*)$line, (void*)$argp);
			]"
		end

	c_set_cb_event_header_object (a_class: POINTER)
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				set_cb_event_header_object ((void*)$a_class);
			]"
		end

	c_set_cb_event_header_entry_1 (a_feature: POINTER)
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				set_cb_event_header_entry_1 ((void*)$a_feature);
			]"
		end

	c_set_cb_event_header_entry_2 (a_feature: POINTER)
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				set_cb_event_header_entry_2 ((void*)$a_feature);
			]"
		end

	c_set_cb_event_header_entry_3 (a_feature: POINTER)
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				set_cb_event_header_entry_3 ((void*)$a_feature);
			]"
		end

	c_call_cb_event_header (a_function: POINTER; name: POINTER; name_len: INTEGER; value: POINTER; value_len: INTEGER; argp: POINTER): INTEGER
		external
			"C inline use <ewg_quiche_callback_c_glue_code.h>"
		alias
			"[
				return call_cb_event_header ((void*)$a_function, (uint8_t*)$name, (size_t)$name_len, (uint8_t*)$value, (size_t)$value_len, (void*)$argp);
			]"
		end

feature -- Externals Address

end
